matrix:
  include:
    - name: Quick Linux build
      os: linux
      dist: xenial  # Ubuntu 16.04, reasonably old and LTS
      language: python
      python: "3.7"
      env:
        # Linux binary wheel must be created using a manylinux docker image,
        # see build job below.
        - PYPI_DEPLOY=0
        - VPATH_DIR=/usr/lib/gcc/x86_64-linux-gnu/5
    - name: macOS 10.15.4 with Xcode 11.6
      os: osx
      osx_image: xcode11.6
      language: generic
      env:
        - PYENV_VERSION='3.7.7'
        - PYENV_VERSION_STRING='Python 3.7.7'
        - PYPI_DEPLOY=1
        # Using an older gcc because newer ones actually use clang and I
        # wasn't able to statically link libquadmath with it.
        - GCC_OVERRIDE=/usr/local/bin/gcc-4.9
        - VPATH_DIR=/usr/local/Cellar/gcc@4.9/4.9.4_2/lib/gcc/4.9
      before_install:
        # Use praekeltfoundation/travis-pyenv to workaround Travis not
        # supporting Python builds on macOS out of the box. (The issue was that
        # Python 2.7 was being picked up during the deploy step).
        - wget https://github.com/praekeltfoundation/travis-pyenv/releases/download/0.4.0/setup-pyenv.sh
        - source setup-pyenv.sh
    - name: manylinux2014
      dist: bionic
      language: python
      python: "3.7"
      services:
        - docker
      env:
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_x86_64
        - PYPI_DEPLOY=1
        - VPATH_DIR=/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9
      install:
        - docker pull $DOCKER_IMAGE
      before_script:
        - >
          docker run \
            --rm \
            -e VPATH_DIR="$VPATH_DIR" \
            -v \
            `pwd`:/io \
            $DOCKER_IMAGE \
            /bin/bash -xc '
              PYBIN="/opt/python/cp37-cp37m/bin/" &&
              "$PYBIN"/pip install pep517 &&
              "$PYBIN"/python -m pep517.build --source --binary /io/ &&
              ORIGINAL_WHEEL="$(ls /io/dist/*.whl)" &&
              auditwheel show "$ORIGINAL_WHEEL" &&
              auditwheel repair "$ORIGINAL_WHEEL" --plat manylinux2014_x86_64 -w /io/dist/ &&
              rm "$ORIGINAL_WHEEL"
            '
cache:
  - directories:
    - $HOME/.pyenv_cache
script:
  - if [[ ! -z ${GCC_OVERRIDE+x} ]] ; then alias gcc="$GCC_OVERRIDE" ; fi
  # Build only if artifacts not already present (as will be the case with the
  # manylinux build, which requires post-processing in container).
  - if [[ ! -d dist ]] ; then pip install pep517 && python -m pep517.build --source --binary . ; fi
  - ldd resp || otool -L resp
  - pip install -v restrained-ESP-fit --no-index --only-binary restrained-ESP-fit -f dist/
  - restrained_ESP_fit  # The target `resp` binary always returns 0
  # TODO: Add some tests
  - pip install twine
  - twine check dist/*
  # TODO: Try to only deploy tagged commits (and when PYPI_DEPLOY variable is set)
  # and only if all above commands worked.
  # - twine upload --skip-existing --repository-url https://test.pypi.org/legacy -u "__token__" -p "$TEST_PYPI_TOKEN" dist/*
addons:
  apt:
    packages: gfortran
  homebrew:
    packages: gcc@4.9
