matrix:
  include:
    - name: Quick Linux build
      os: linux
      dist: bionic  # Ubuntu 18.04 LTS
      language: python
      python: "3.7"
      env:
        # Linux binary wheel must be created using a manylinux docker image,
        # see build job below.
        - PYPI_DEPLOY=0
        - WHEEL_PLAT=linux_x86_64
        - VPATH_DIR=/usr/lib/gcc/x86_64-linux-gnu/7
    - name: macOS 10.15.4 with Xcode 11.6
      os: osx
      osx_image: xcode11.6
      language: generic
      env:
        - PYENV_VERSION='3.7.7'
        - PYENV_VERSION_STRING='Python 3.7.7'
        - PYPI_DEPLOY=1
        - WHEEL_PLAT=macosx_10_15_x86_64
        # Using an older gcc because newer ones actually use clang and I
        # wasn't able to statically link libquadmath with it.
        - GCC_OVERRIDE=/usr/local/bin/gcc-4.9
        - VPATH_DIR=/usr/local/Cellar/gcc@4.9/4.9.4_2/lib/gcc/4.9
      before_install:
        # Use praekeltfoundation/travis-pyenv to workaround Travis not
        # supporting Python builds on macOS out of the box. (The issue was that
        # Python 2.7 was being picked up during the deploy step).
        - wget https://github.com/praekeltfoundation/travis-pyenv/releases/download/0.4.0/setup-pyenv.sh
        - source setup-pyenv.sh
    - name: manylinux2014
      dist: bionic
      language: python
      python: "3.7"
      services:
        - docker
      env:
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_x86_64
        - PYPI_DEPLOY=1
        - VPATH_DIR=/usr/lib/gcc/x86_64-linux-gnu/7
      install:
        - docker pull $DOCKER_IMAGE
      before_script:
        - >
          docker run \
            --rm \
            -e VPATH_DIR=/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9 \
            -e WHEEL_PLAT=manylinux2014_x86_64 \
            -v `pwd`:/io \
            -w /io \
            $DOCKER_IMAGE \
            /bin/bash -xc '
              PYBIN="/opt/python/cp37-cp37m/bin/" &&
              "$PYBIN"/python setup.py sdist bdist_wheel --python-tag py3 --plat="$WHEEL_PLAT" &&
              auditwheel show /io/dist/*.whl
              # The Makefile links any non-manylinux libraries statically.
              # However, `auditwheel show` is useful to confirm that nothing
              # slipped through. It would be even better to assert that nothing
              # needs repairing, which may be possible through an exit code in
              # the future: https://github.com/pypa/auditwheel/issues/180
              #
              # Note that `auditwheel repair` would not work anyway, as it is
              # only meant for binary extensions which are later imported
              # through the interpreter.
            '
cache:
  - directories:
    - $HOME/.pyenv_cache
script:
  # Build only if artifacts not already present (as will be the case with the
  # manylinux build, which is built in a container).
  - if [[ ! -d dist ]] ; then python setup.py sdist bdist_wheel --python-tag py3 --plat="$WHEEL_PLAT" ; fi
  - ldd ./restrained_ESP_fit/resp || otool -L ./restrained_ESP_fit/resp
  # Test installing from source, which should still work if gfortran is available
  - pip install -v restrained-ESP-fit --no-index --no-binary restrained-ESP-fit -f dist/
  - restrained_ESP_fit  # In lieu of tests; the target `resp` binary always returns 0
  - pip uninstall --yes restrained-ESP-fit
  # Test installing from the binary wheel
  - pip install -v restrained-ESP-fit --no-index --only-binary restrained-ESP-fit -f dist/
  - restrained_ESP_fit  # In lieu of tests; the target `resp` binary always returns 0
  - pip install twine
  - twine check dist/*
after_success:
  - >
    if [[ $(git tag --points-at HEAD | head -c1 | wc -c) -ne 0 && "$PYPI_DEPLOY" -eq 1 ]] ; then
      echo "Build successful, tagged commit and job marked for deployment --- deploying..."
      twine upload --skip-existing --repository-url https://test.pypi.org/legacy/ -u "__token__" -p "$TEST_PYPI_TOKEN" dist/*
    else
      echo "Build successful but criteria not met, not deploying."
    fi
addons:
  apt:
    packages: gfortran
  homebrew:
    packages: gcc@4.9
