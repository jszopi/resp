# This makefile is used to produce binaries for distribution as Python wheels.
# While the original makefile links all libraries dynamically, this one only
# does so for the most fundamental libraries, which can be assumed to be
# present on a bare-bones OS. There are no fancy library dependencies, it's
# just that gfortran isn't installed on macOS out of the box. For consistency,
# the same (parametrized) recipe is used for the Linux build.

# Fortran compiler. Only gfortran, specifically its invocation through gcc,
# correctly produces a static link on all tested platforms.
FC = $(or $(RESP_COMPILER),gcc)

FLAGS = -c -O2 -v
# -mcmodel=medium
# option for gfortran
# allows handling of a larger number of MEP on 64 bit system
# FLAGS = -c -mcmodel=medium -O2

OBJS= resp.o
SRCS= resp.f
LIB= shared_variables.h

# Static compilation on Linux can be done simply with the -static flag, but on
# macOS no static version of the crt0 "library" is available, see
# https://stackoverflow.com/a/3801032/4169352
#
# Statically linking only selected libraries is also not as straightforward on
# macOS. `-Wl,Bstatic/dynamic` and -`l:libgfortran.a` only work with GNU `ld`.
# The vpath trick is described here: https://stackoverflow.com/a/5583245
vpath %.a $(RESP_VPATH)
.LIBPATTERNS = lib%.a lib%.dylib lib%.so
# In addition to the gfortran library, quadmath needs to be linked statically
# too, see https://gcc.gnu.org/bugzilla/show_bug.cgi?id=46539#c3
STATICLIBS = -lgfortran -lquadmath

resp:	$(OBJS) $(STATICLIBS)
	# -lm is needed on Linux per https://gcc.gnu.org/bugzilla/show_bug.cgi?id=46539#c3
	$(FC) $^ -lm -o resp

$(OBJS): $(SRCS) $(LIB)
	$(FC) $(FLAGS) $(SRCS)

clean:
	rm -rf $(OBJS) resp

